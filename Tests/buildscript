c = run_command('ls_all.sh')
sources = c.stdout().strip().split('\n')

dep = []
if lapack_dep.found()
   dep += lapack_dep
   dep += blas_dep
endif
if petscd
   dep += petsc_dep
   dep += mpich_dep
endif
if slepc
   if petsc
      dep += slepc_dep
   endif   
endif

foreach source : sources
  stub = source.split('.cpp')[0]  

  build = true
  if stub.contains('_petscd') and get_option('petscd')==false
     message( 'Ignoring _petscd test: ' + stub )
     build = false
  endif
  if stub.contains('_petscz') and get_option('petscz')==false
     message( 'Ignoring _petscz test: ' + stub )
     build = false
  endif
  if stub.contains('_lapack') and lapack_dep.found()==false
     message( 'Ignoring _lapack test: ' + stub )
     build = false
  endif   
  if stub.contains('_slepcd') and ( get_option('slepc')==false or get_option('petscd')==false )
     message( 'Ignoring _slepcd test: ' + stub )
     build = false
  endif
  if stub.contains('_slepcz') and ( get_option('slepc')==false or get_option('petscz')==false )
     message( 'Ignoring _slepcz test: ' + stub )
     build = false
  endif

  if build
    message( 'Building test: ' + stub )
    exe = executable(stub, source, include_directories : inc,
      dependencies : dep, link_with : CppNoddy )
    test(stub, exe, timeout : 300 ) 
  endif  

endforeach
